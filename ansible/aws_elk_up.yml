#!/usr/bin/env /usr/bin/ansible-playbook
---


##
##   Spin up the AWS environment, pull containers from ECR, and launch them
##

# Build the containers, and push them to ECR (if necessary)
- include: aws_elk_push_to_ecr.yml

# Get info about, and launch other, AWS instances
- hosts: localhost
  become: yes
  become_method: sudo
  vars_files:
    - ansible_aws_params.yml
  vars:
    aws_get_info: yes
    aws_launch: yes
  roles:
    - baseline
    - common
    - ansible_docker_utils
    - ansible_weave
    # Launch service servers
    - role: ansible_aws
      aws_server_type: "{{ ansible_aws_servers.elk.name }}"
      aws_instance_count: "{{ ansible_aws_servers.elk.count }}"
      aws_instance_type: "{{ ansible_aws_servers.elk.instance_type }}"

# Connect all the hosts w/ Weave
# Possible issue here - the server comes up, and the playbook crashes before the next step
# Need to ensure that we can continue from where we left off.
# Possibly, set a file or flag after weave is done?
# Servers
- hosts: "{{ ansible_aws_servers.new.name }}"
  become: yes
  become_method: sudo
  vars_files:
    - ansible_aws_params.yml
  roles:
    - baseline
    - common
    - ansible_docker_utils
    - role: ansible_weave
      #hosts_to_connect: "{{ play_hosts }}"
      # This is the Bounce Node's private IP
      weave_root_host: "{{ hostvars['localhost']['ansible_default_ipv4']['address'] }}"
      weave_launch: yes
      weave_prime: yes
      when: inventory_hostname != 'localhost'

# Servers
- hosts: "{{ ansible_aws_servers.elk.name }}"
  become: yes
  become_method: sudo
  vars_files:
    - ansible_aws_params.yml
  vars:
    aws_login_to_ecr: yes
    aws_pull_from_ecr: yes
    run_containers: yes
  roles:
    - baseline
    - common
    - ansible_docker_utils
    - ansible_weave
    - ansible_aws

    # Per instance items
    - elasticsearch
    - logstash
    - kibana
