---

# Check if the container is running.  If it is, dont' run it
- name: Check if {{ containers.elk_nginx.name }} is running
  include: roles/ansible_docker_utils/tasks/is_container_running.yml
  vars:
    docker_name: "{{ containers.elk_nginx.name }}"

# Pull the image from ECR
- name: Pull {{ containers.elk_nginx.name }} from ECR
  include: roles/ansible_aws/tasks/aws_pull_from_ecr.yml
  vars:
    aws_image_name: "{{ containers.elk_nginx.name }}"
    aws_image_tag: "{{ containers.elk_nginx.version }}"
  when: ansible_aws_pull_from_ecr is defined


# Run the container if it isn't running
- name: Launch the container {{ containers.elk_nginx.name }}
  include: roles/ansible_docker_utils/tasks/run_container.yml
  vars:
    docker_name: "{{ containers.elk_nginx.name }}"
    docker_domain_name: "{{ weave.domain_name }}"
    docker_volume_args: "{{ containers.elk_nginx.volume_args }}"
    docker_extra_args: "-d
                        --restart=always
                        -p {{ ansible_nginx_port_http }}:{{ ansible_nginx_port_http }}
                        -p {{ ansible_nginx_port_https }}:{{ ansible_nginx_port_https }}
                        {{ weave_docker_args }}"
  register: result
  when: "not {{docker_container_is_running }}"

# Check if nginx is up
- name: Check if {{ containers.elk_nginx.name }} is up
  include: roles/ansible_docker_utils/tasks/is_nginx_up.yml
  vars:
    docker_name: "{{ containers.elk_nginx.name }}"
    docker_port: "{{ ansible_nginx_port_http }}"
    docker_retries: "{{ containers.elk_nginx.retry_count }}"
    docker_delay: "{{ containers.elk_nginx.retry_wait }}"
    docker_auth_required: true
